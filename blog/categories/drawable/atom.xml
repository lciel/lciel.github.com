<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Drawable | Unmotivated]]></title>
  <link href="http://blog.lciel.jp/blog/categories/drawable/atom.xml" rel="self"/>
  <link href="http://blog.lciel.jp/"/>
  <updated>2014-04-09T21:09:55+09:00</updated>
  <id>http://blog.lciel.jp/</id>
  <author>
    <name><![CDATA[lciel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[9-Patch のコンテンツ領域は伸縮しない]]></title>
    <link href="http://blog.lciel.jp/blog/2014/04/09/ninepatchs-content-bounds-is-not-flexible/"/>
    <updated>2014-04-09T20:39:16+09:00</updated>
    <id>http://blog.lciel.jp/blog/2014/04/09/ninepatchs-content-bounds-is-not-flexible</id>
    <content type="html"><![CDATA[<p>9-Patch でコンテンツ領域を指定することはよくあるけれど、実は NinePatchDrawable を Background とした View のサイズを変更しても、コンテンツ領域(というか Padding) はうまい感じに伸縮してくれない。</p>

<p>たとえば次のような 9-Patch の画像を用意してコンパイル、NinePatchDrawable として読み込んだ場合を考える。</p>

<p><img src="/images/star.9.png" alt="star" /></p>

<!-- more -->


<p>以下のようなレイアウトだった場合を考えてみる。</p>

<p>``` xml
&lt;LinearLayout xmlns:android=&ldquo;<a href="http://schemas.android.com/apk/res/android">http://schemas.android.com/apk/res/android</a>&rdquo;</p>

<pre><code>xmlns:tools="http://schemas.android.com/tools"
android:id="@+id/rootView"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical" &gt;

&lt;FrameLayout
    android:layout_width="100dp"
    android:layout_height="100dp"
    android:background="@drawable/star"&gt;
    &lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/aaa"
        android:background="#ff0000"/&gt;
&lt;/FrameLayout&gt;

&lt;FrameLayout
    android:layout_width="@dimen/original_drawable_width"
    android:layout_height="@dimen/original_drawable_height"
    android:background="@drawable/star"&gt;
    &lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/aaa"
        android:background="#ff0000"/&gt;
&lt;/FrameLayout&gt;

&lt;FrameLayout
    android:layout_width="200dp"
    android:layout_height="200dp"
    android:background="@drawable/star"&gt;
    &lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/aaa"
        android:background="#ff0000"/&gt;
&lt;/FrameLayout&gt;
</code></pre>

<p></LinearLayout>
```
なんとなく次のように伸縮してくれそうな気がするが&hellip;</p>

<p><img src="/images/ninepatch-expand-success.png" alt="理想" /></p>

<p>実際に表示されるレイアウトは以下のようになる。</p>

<p><img src="/images/ninepatch-expand-failure.png" alt="現実" /></p>

<p>View.java が setBackgroundDrawable() のときにしか padding を設定してくれないために、このようになってしまう。</p>

<p>コンテンツ領域が伸縮しない場合もあるので当然といえば当然だけれど、今回のような 9-Patch 画像のように、View のサイズについてきてほしい場合もある。</p>

<h2>コンテンツ領域を伸縮させる</h2>

<p>そこで、 NinePatchDrawable から元々の padding を取得して、現在の View のサイズに合うように伸縮させてみる。</p>

<p><div><script src='https://gist.github.com/10258303.js'></script>
<noscript><pre><code>package jp.lciel.example;

import android.app.Activity;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.NinePatchDrawable;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver.OnGlobalLayoutListener;

public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final ViewGroup rootView = (ViewGroup)findViewById(R.id.rootView);
        // View のサイズが決まってから実行
        rootView.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
            @Override
            public void onGlobalLayout() {
                int originalDrawableWidth  = getResources().getDimensionPixelSize(R.dimen.original_drawable_width);
                int originalDrawableHeight = getResources().getDimensionPixelSize(R.dimen.original_drawable_height);
                for (int i=0; i&lt;rootView.getChildCount(); i++) {
                    View targetView = rootView.getChildAt(i);
                    updatePadding(targetView, originalDrawableWidth, originalDrawableHeight);
                }
            }
        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    private void updatePadding(View targetView, int originalWidth, int originalHeight) {
        Drawable background = targetView.getBackground();
        if(background instanceof NinePatchDrawable) {
            float scaleX = (float)targetView.getWidth() / (float)originalWidth;
            float scaleY = (float)targetView.getHeight() / (float)originalHeight;

            Rect padding = new Rect();
            ((NinePatchDrawable) background).getPadding(padding);
            int left   = (int)(padding.left * scaleX);
            int right  = (int)(padding.right * scaleX);
            int top    = (int)(padding.top * scaleY);
            int bottom = (int)(padding.bottom * scaleY);
            targetView.setPadding(left, top, right, bottom);
        }
    }

}
</code></pre></noscript></div>
</p>

<p>これで以下のように伸縮してくれる。</p>

<p><img src="/images/ninepatch-expand-success.png" alt="結果" /></p>
]]></content>
  </entry>
  
</feed>
