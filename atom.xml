<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Unmotivated]]></title>
  <link href="http://lciel.github.io/atom.xml" rel="self"/>
  <link href="http://lciel.github.io/"/>
  <updated>2013-11-22T19:08:31+09:00</updated>
  <id>http://lciel.github.io/</id>
  <author>
    <name><![CDATA[lciel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ListView で onItemClick() と onItemLongClick() を両立]]></title>
    <link href="http://lciel.github.io/blog/2013/11/22/onitemclick-vs-onitemlongclick/"/>
    <updated>2013-11-22T18:50:00+09:00</updated>
    <id>http://lciel.github.io/blog/2013/11/22/onitemclick-vs-onitemlongclick</id>
    <content type="html"><![CDATA[<p>ListView で onItemClick() と onItemLongClick() を同時に仕掛けた際に、指を離すタイミングによっては onItemLongClick() に続けて onItemClick() が呼ばれてしまう。</p>

<p>一般的な Touch Event の例に漏れず、 onItemLongClick() で true を返しておけば、その後のイベントはキャンセルされる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onItemClick</span><span class="o">(</span><span class="n">AdapterView</span><span class="o">&lt;?&gt;</span> <span class="n">parent</span><span class="o">,</span> <span class="n">View</span> <span class="n">view</span><span class="o">,</span> <span class="kt">int</span> <span class="n">position</span><span class="o">,</span> <span class="kt">long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">        なんやかんや</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onItemLongClick</span><span class="o">(</span><span class="n">AdapterView</span><span class="o">&lt;?&gt;</span> <span class="n">parent</span><span class="o">,</span> <span class="n">View</span> <span class="n">view</span><span class="o">,</span> <span class="kt">int</span> <span class="n">position</span><span class="o">,</span> <span class="kt">long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">        なんやかんや</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// これで onItemLongClick() のあとに onItemClick() が呼ばれなくなる</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ViewFlipper の InAnimation を1つ目には適用しない]]></title>
    <link href="http://lciel.github.io/blog/2013/11/21/disable-in-animation-of-viewflipper/"/>
    <updated>2013-11-21T20:58:00+09:00</updated>
    <id>http://lciel.github.io/blog/2013/11/21/disable-in-animation-of-viewflipper</id>
    <content type="html"><![CDATA[<p>ViewFlipper に InAnimation を設定した状態で startFlipping() をコールした際に、1つ目の View にも InAnimation が適用されてしまうのを回避したい。</p>

<p>AutoStart を指定せずに明示的に startFlipping() をコールした後に setInAnimation() してやれば OK</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ViewFlipper</span> <span class="n">viewFlipper</span> <span class="o">=</span> <span class="o">(</span><span class="n">ViewFlipper</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">viewFlipper</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// viewFlipper.setAutoStart(true);</span>
</span><span class='line'><span class="n">viewFlipper</span><span class="o">.</span><span class="na">startFlipping</span><span class="o">();</span>
</span><span class='line'><span class="n">viewFlipper</span><span class="o">.</span><span class="na">setInAnimation</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">anim</span><span class="o">.</span><span class="na">fadein</span><span class="o">);</span>
</span><span class='line'><span class="n">viewFlipper</span><span class="o">.</span><span class="na">setOutAnimation</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">anim</span><span class="o">.</span><span class="na">fadeout</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 端末のシェアを視覚的に見る]]></title>
    <link href="http://lciel.github.io/blog/2013/11/21/android-fragmentation-visualized/"/>
    <updated>2013-11-21T20:46:00+09:00</updated>
    <id>http://lciel.github.io/blog/2013/11/21/android-fragmentation-visualized</id>
    <content type="html"><![CDATA[<p>OpenSignal が公開してくれている、 Android 端末毎のシェアを視覚的に表示してくれるサービス。</p>

<ul>
<li><a href="http://opensignal.com/reports/fragmentation-2013/">Android Fragmentation Visualized</a></li>
</ul>


<p>こうみると SAMSUNG 一強だな。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 2.x で表示される ScrollView の端のフェード(Fading Edge)を消す]]></title>
    <link href="http://lciel.github.io/blog/2013/11/21/remove-fading-edge/"/>
    <updated>2013-11-21T20:30:00+09:00</updated>
    <id>http://lciel.github.io/blog/2013/11/21/remove-fading-edge</id>
    <content type="html"><![CDATA[<p>Android 2.x 系ではスクロール可能な方向に Fading Edge が表示されるが、それを消したい。</p>

<h3>fadingEdge を指定する方法</h3>

<ul>
<li>xml で指定</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;ScrollView</span>
</span><span class='line'>    <span class="err">...</span>
</span><span class='line'>    <span class="na">android:fadingEdge=</span><span class="s">&quot;none&quot;</span>
</span><span class='line'>    <span class="err">...</span>
</span><span class='line'>    <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ICS 以上では android:requiresFadingEdge が代わりに適用される</li>
</ul>


<h3>fadingEdgeLength を 0dp に指定する方法</h3>

<ul>
<li>xml</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;ScrollView</span>
</span><span class='line'>    <span class="err">...</span>
</span><span class='line'>    <span class="na">android:fadingEdgeLength=</span><span class="s">&quot;0dp&quot;</span>
</span><span class='line'>    <span class="err">...</span>
</span><span class='line'>    <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>直接コードで指定する場合はこう</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ListView</span> <span class="n">listView</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">listView</span><span class="o">);</span>
</span><span class='line'><span class="n">listView</span><span class="o">.</span><span class="na">setFadingEdgeLength</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ブログ(また)はじめました]]></title>
    <link href="http://lciel.github.io/blog/2013/11/21/about/"/>
    <updated>2013-11-21T20:14:00+09:00</updated>
    <id>http://lciel.github.io/blog/2013/11/21/about</id>
    <content type="html"><![CDATA[<p>投稿の敷居を極限まで下げてみたので、久しぶりにブログを書き始めてみます。</p>

<p>基本的に、普段書いているメモを切り取って投げるだけなので、スニペットやら調査の結果やらばかりになるかと思います。</p>

<p>3日坊主にならないように、適当にがんばります。</p>
]]></content>
  </entry>
  
</feed>
